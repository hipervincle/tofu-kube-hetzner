apiVersion: v1
kind: ServiceAccount
metadata:
  name: system-upgrade
  namespace: system-upgrade

---
# ClusterRole granting cluster-scoped permissions the controller typically needs
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system-upgrade-controller
rules:
  # Allow access to the Plan CRD (upgrade.cattle.io)
  - apiGroups: ["upgrade.cattle.io"]
    resources: ["plans", "planstatuses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Jobs and pods in namespaces managed by the controller
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/status", "pods/eviction"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Node operations (cordon/uncordon require patch/update on nodes)
  - apiGroups: [""]
    resources: ["nodes", "nodes/status"]
    verbs: ["get", "list", "watch", "patch", "update"]

  # Events and namespaces
  - apiGroups: [""]
    resources: ["events", "namespaces"]
    verbs: ["create", "get", "list", "watch"]

  # Allow getting/patching generic workload resources if needed
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets"]
    verbs: ["get", "list", "watch", "patch", "update"]

---
# ClusterRoleBinding: bind the cluster role to the service account in the system-upgrade namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system-upgrade-controller-binding
subjects:
  - kind: ServiceAccount
    name: system-upgrade
    namespace: system-upgrade
roleRef:
  kind: ClusterRole
  name: system-upgrade-controller
  apiGroup: rbac.authorization.k8s.io
